import Head from "next/head";
import { Inter } from "next/font/google";
import styles from './index.module.scss'
import { useEffect, useState } from "react";
import axios, { Axios } from "axios";
import HomeComp from "@/components/HomeComp/HomeComp";
import Categories from "@/components/Categories/categories";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [patients, setPatients] = useState([])
  const [queue, setQueue] = useState([])
  const [vitals,setVitals] = useState(["Outpatient","Dental"])
  const now = new Date();
  const hours = now.getHours();
  const minutes = now.getMinutes();
  const seconds = now.getSeconds();

  useEffect(()=> {
    getQueue()
    getPatients()
  },[])

  function generateName(clinic:string) {
    const firstChar = clinic.charAt(0);
    const randomNumbers = [];
    for (let i = 0; i < 3; i++) {
        randomNumbers.push(Math.floor(Math.random() * 10));
    }
    const name = firstChar + randomNumbers.join('');

    return name;
}


  const getPatients = async () => {
    axios.get('http://localhost:5000/patients/get_patients').then((data:any) => {
        setPatients(data.data)
    }).catch((error) => {
        if (error.response && error.response.status === 400) {
            console.log(`there is an error ${error.message}`)
            alert(error.response.data.error);
        } else {
            console.log(`there is an error message ${error.message}`)
            alert(error.message);
        }
    })
}
  const getQueue = async () => {
    axios.get('http://localhost:5000/queues/getAll').then((data:any) => {
      setQueue(data.data)
        setInterval(()=> {
          // manipulate()
        },1000)
    }).catch((error) => {
        if (error.response && error.response.status === 400) {
            console.log(`there is an error ${error.message}`)
            //alert(error.response.data.error);
        } else {
            console.log(`there is an error message ${error.message}`)
            //alert(error.message);
        }
    })
}
  const createQueue = async (e:React.FormEvent) => {
    e.preventDefault()
    console.log('creating queue')
    if(patients.length>0){
      patients.forEach((pt:any)=> {
        if(queue.some((obj:any) => obj.mr_no === pt.mr_no)){
          console.log('user exists',pt.mr_no)
        }else{
        let status
        let name = generateName(pt.clinic)
        if(vitals.includes(pt.clinic)){
          status="vitaling"
        }else{
          status="waiting"
        }
        axios.post('http://localhost:5000/queues/create_queue',{name:pt.name,clinic:pt.clinic,age: pt.age,mr_no:pt.mr_no, sex:pt.sex,reg_date:pt.reg_date,reg_time:pt.reg_time,consulting_doctor:pt.consult_doctor,ticket_no:name,status:status}).then((data:any) => {
          setQueue(data.data)
            setInterval(()=> {
              console.log(queue)
              // manipulate()
            },1000)
        }).catch((error) => {
            if (error.response && error.response.status === 400) {
                console.log(`there is an error ${error.message}`)
                alert(error.response.data.error);
            } else {
                console.log(`there is an error message ${error.message}`)
                alert(error.message);
            }
        })
        }
      })
    }else{
      console.log('no users')
    }
}
  return (
    <div className={styles.index}>
      <Head>
        <title>Muhimbili Queuing System</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Categories/>
        {/* <HomeComp/> */}
      </main>
    </div>
  );
}
